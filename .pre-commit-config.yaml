repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: ^(flake\.lock|\.git/)
        additional_dependencies: ['gibberish-detector']

# GitGuardian ggshield - requires API key setup
  # To enable: run `ggshield auth login` to set up API key
  # - repo: https://github.com/gitguardian/ggshield
  #   rev: v1.30.0
  #   hooks:
  #     - id: ggshield
  #       language: python
  #       stages: [pre-commit]
  #       args: ['secret', 'scan', 'pre-commit']

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.21.2
    hooks:
      - id: gitleaks
        args: ['--verbose', '--redact']
        exclude: ^\.secrets\.baseline$

  - repo: local
    hooks:
      - id: check-private-keys
        name: Check for private keys
        entry: bash -c 'if grep -r --include="*.pem" --include="*.key" --include="*.p12" --include="*.pfx" "BEGIN.*PRIVATE KEY\|BEGIN RSA PRIVATE KEY\|BEGIN DSA PRIVATE KEY\|BEGIN EC PRIVATE KEY" .; then echo "Private key detected!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: check-sensitive-patterns
        name: Check for sensitive patterns
        entry: bash -c 'if grep -r --exclude-dir=.git --exclude="*.md" --exclude=".secrets.baseline" --exclude=".pre-commit-config.yaml" --exclude-dir=hosts -i "password\s*=.*[^#]\|api_key\s*=.*[^#]\|secret\s*=.*[^#]\|token\s*=.*[^#]" .; then echo "Potential credential detected!"; exit 1; fi'
        language: system
        pass_filenames: false

      - id: nix-file-validation
        name: Validate Nix files
        entry: bash -c 'for file in "$@"; do nix-instantiate --parse "$file" >/dev/null 2>&1 || { echo "Nix validation failed for $file"; exit 1; }; done'
        language: system
        files: '\.nix$'
